##create a phylseq obejct using taxa, seqtab.nochim and the metadata we used beforehand


## Install all packages this workflow

library(phyloseq) # Because we are going to work with microbioe data using phyloseq object
library(vegan) # Many ecology related functions
library(tidyverse) # Use of pipe and lots of functions for a better R coding
library(microbiome) # some useful functions
library(DESeq2)# Test with negative binomial models
library(dplyr) 
library(dada2)
library(magrittr)
library(dplyr)
library(readxl)
library(Biostrings)
library(ggplot2)


setwd("/home/sukmb626") #wherever you wanna work on the medcluster




## microbiome information

seqtab.nochim <- readRDS(paste0("seqtab_nochim_18S.Rds"))

current_row_names <- rownames(seqtab.nochim)
new_row_names <- sub("_F_filt.fastq\\.gz$" , "", current_row_names)
rownames(seqtab.nochim) <- new_row_names
View(seqtab.nochim)
micro <- seqtab.nochim

## taxonomy information, generated with "assign_taxonomy" beforehand
taxonomy <- taxa 

##include the metadata of the samples 
samples <- SCHISDIMA_Metadata_NGS_ID

#the the NGS_ID as the rownames of the samples, so we can do the phyloseq-object generation easily
row.names(samples) <- samples$NGS_ID
head(samples)

samples <- samples[, -c(2)]
head(samples)


## order the tables, so that NGS ID will fit to each another and we can generate the phyloseq object

ordered_micro <- micro[order(rownames(micro)),]

current_row_names <- rownames(ordered_micro)
new_row_names <- sub("_F_filt.fastq\\.gz$" , "", current_row_names)
rownames(ordered_micro) <- new_row_names


ordered_taxonomy <- taxonomy[order(rownames(taxonomy)),]

ordered_samples <- samples[order(rownames(samples)),]


## put the NTCs and the  Mock communities in an extra table

ID_NTC_Mock <- readRDS("/home/sukmb626/ID_NTC_Mock.rds") 
head(ID_NTC_Mock)
ID_NTC_Mock <- NTC_Mock_IDS$ID
rows_to_remove <- ID_NTC_Mock
ordered_micro <- ordered_micro[(rownames(ordered_micro) %in% rownames_samples), ]
ordered_taxonomy <- ordered_taxonomy[!(rownames(ordered_taxonomy) %in% rows_to_remove), ]


## check if the rownames of the different phyoseq-components would be the same

identical(taxa %>% rownames(), micro %>% colnames())
TRUE? NICE

identical(ordered_micro %>% rownames(), ordered_samples$NGS_ID)
FALSE? Shit: 


identical(ordered_taxonomy %>% rownames(), ordered_micro %>% colnames())

identical(ordered_micro %>% rownames(), ordered_samples$NGS_ID)

##if this is not true, remove unidentical rownames 

rownames_micro <- ordered_micro %>% rownames() #get the ronames first
rownames_samples <- ordered_samples$NGS_ID

unique_to_rownames_micro <- setdiff(rownames_micro , rownames_samples) ##compare the different rownames, and see which are "unique"
unique_to_rownames_samples <- setdiff(rownames_samples, rownames_micro)

dim(unique_to_rownames_samples)
dim(unique_to_rownames_micro)


##if there are unique rownames, remove them! 
rows_to_remove <- unique_to_rownames_micro 
ordered_micro <- ordered_micro[!(rownames(ordered_micro) %in% rows_to_remove), ]


identical(ordered_micro %>% rownames(), ordered_samples$NGS_ID)



##If all are identical, the Phyloseq object can be generated: 

tax.ps <-
  tax_table(taxa %>% as.matrix())

micro.ps <-
  otu_table(ordered_micro, taxa_are_rows = F)

samples.ps <-
  sample_data(ordered_samples %>% data.frame())

rownames(samples.ps) <-
  samples.ps %>% pull(NGS_ID)

ps <-
  phyloseq(tax_table(tax.ps),  
           otu_table(micro.ps, taxa_are_rows = F),
           sample_data(samples.ps))

ps

saveRDS(ps, "/home/sukmb626/ps_18S.rds")



##continue in R studio to generate alpha and beta diversity plots 
